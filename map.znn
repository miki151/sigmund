export import "libtcod.znn";
export import "rectangle.znn";
export import "std/vector.znn";

export struct Tile {
  bool canWalk;
  TCODColor color;
  int ch;
};

export Tile copy(Tile* t) = default;

export struct Room {
  Rectangle bounds;
  Tile[30][30] tiles;
};

export struct Map {
  vector<Room> rooms;
  Tile emptyTile;
};

export Tile* getTile(Map* map, Vec2 pos) {
  for (mutable room : map->rooms)
    if (room->bounds.contains(&pos)) {
      const tileCoord = pos - room->bounds.begin;
      return &room->tiles[tileCoord.x][tileCoord.y];
    }
  return &map->emptyTile;
}

export void render(Map* map, TCODConsole mutable* console, Vec2 center, Vec2 screenSize) {
  for (mutable v : Rectangle(Vec2(0, 0), screenSize.copy())) {
    const tile = getTile(map, *v + center - screenSize / 2);
    console->set_char_background(v->x, v->y, &tile->color);
  }
}
